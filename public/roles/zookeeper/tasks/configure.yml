---

- name: cluster | Setup hosts.
  lineinfile: "dest=/etc/hosts line='{{ ansible_default_ipv4.address }} {{ ansible_hostname }}'"
  delegate_to: "{{ item }}"
  with_items:
    - "{{ play_hosts }}"


- name: configure | Create zookeeper Directory.
  file: path={{ zookeeper_datadir }} state=directory owner={{ zookeeper_user }} group={{ zookeeper_user }}

- name: configure | Set myid.
  template: dest={{ zookeeper_datadir }}/myid src=myid.j2 owner={{ zookeeper_user }} group={{ zookeeper_user }}

- name: configure | Set zoo.cfg file.
  template:
    dest: "{{ software_install_path}}/zookeeper-{{ zookeeper_version }}/conf/zoo.cfg"
    mode: 0644
    src: zoo.cfg.j2
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"

- name: configure | Set java.env file.
  template:
    dest: "{{ software_install_path}}/zookeeper-{{ zookeeper_version }}/conf/java.env"
    mode: 0644
    src: java.env.j2
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_user }}"

- name: configure | Set zookeeper init script.
  template:
    dest: "/etc/init.d/{{ zookeeper_name }}"
    mode: 0755
    src: zookeeper.init.j2
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "6"
#
- name: configure | Set zookeeper init script.
  template:
    dest: "/etc/rc.d/init.d/{{ zookeeper_name }}"
    mode: 0755
    src: zookeeper.service.j2
  when: ansible_distribution == 'CentOS' and ansible_distribution_major_version == "7"

- name: configure | Add zookeeper services.
  shell: "chkconfig --add {{ zookeeper_name }} && chkconfig {{ zookeeper_name }} on"

- name: configure | Ensure zookeeper is started and enabled on boot.
  notify: 
    source java
  service: "name={{ zookeeper_name }} state=started"
  #shell: "/etc/init.d/{{ zookeeper_name }} restart "  

- name: configure | Wait for Zookeeper port is OPEN.
  wait_for: "port={{ zookeeper_port }} state=started"
